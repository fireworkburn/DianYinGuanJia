package com.znt.vodbox.activity;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.DialogInterface.OnDismissListener;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.Display;
import android.view.View;
import android.view.WindowManager;
import android.view.View.OnClickListener;

import com.znt.diange.mina.cmd.DeviceInfor;
import com.znt.vodbox.R;
import com.znt.vodbox.dialog.EditNameDialog;
import com.znt.vodbox.dialog.VideoDirectionDialog;
import com.znt.vodbox.utils.DateUtils;
import com.znt.vodbox.view.ItemTextView;

public class ShopSettingActivity extends BaseActivity implements OnClickListener
{

	private ItemTextView itvName = null;
	private ItemTextView itvAddr = null;
	private ItemTextView itvOritation = null;
	private ItemTextView itvLastOnline = null;
	private ItemTextView itvEndTime = null;
	private ItemTextView itvVersion = null;
	private ItemTextView itvWifiName = null;
	private ItemTextView itvWifiPwd = null;
	private ItemTextView itvIp = null;
	private ItemTextView itvStorage = null;
	
	private DeviceInfor deviceInfor = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.view_shop_setting);
		
		setCenterString(getResources().getString(R.string.shop_setting));
		
		itvName = (ItemTextView)findViewById(R.id.itv_shop_setting_name);
		itvAddr = (ItemTextView)findViewById(R.id.itv_shop_setting_addr);
		itvOritation = (ItemTextView)findViewById(R.id.itv_shop_setting_oritation);
		itvLastOnline = (ItemTextView)findViewById(R.id.itv_shop_setting_last_online_time);
		itvEndTime = (ItemTextView)findViewById(R.id.itv_shop_setting_dead_time);
		itvVersion = (ItemTextView)findViewById(R.id.itv_shop_setting_version);
		itvWifiName = (ItemTextView)findViewById(R.id.itv_shop_setting_wifi_name);
		itvWifiPwd = (ItemTextView)findViewById(R.id.itv_shop_setting_wifi_pwd);
		itvIp = (ItemTextView)findViewById(R.id.itv_shop_setting_ip);
		itvStorage = (ItemTextView)findViewById(R.id.itv_shop_setting_storage);
		
		deviceInfor = (DeviceInfor) getIntent().getSerializableExtra("DeviceInfor");
		
		initViews();
	}
	
	private void initViews()
	{
		itvName.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_name));
		itvAddr.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_addr));
		itvOritation.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_oritation));
		itvLastOnline.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_last_online_time));
		itvEndTime.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_dead_time));
		itvVersion.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_version));
		itvWifiName.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_wifi_name));
		itvWifiPwd.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_wifi_pwd));
		itvIp.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_ip));
		itvStorage.getFirstView().setText(getResources().getString(R.string.itv_shop_setting_storage));
		
		
		itvName.showMoreButton(true);
		itvAddr.showMoreButton(true);
		itvOritation.showMoreButton(true);
		
		
		itvName.getSecondView().setText(deviceInfor.getName());
		itvAddr.getSecondView().setText(deviceInfor.getAddr());
		itvOritation.getSecondView().setText(getVideoWhirl(deviceInfor.getVideoWhirl()));
		itvLastOnline.getSecondView().setText(DateUtils.getDateFromLong(Long.parseLong(deviceInfor.getLastBootTime())));
		itvEndTime.getSecondView().setText(DateUtils.getDateFromLong(Long.parseLong(deviceInfor.getEndTime())));
		itvVersion.getSecondView().setText(deviceInfor.getVersion());
		itvWifiName.getSecondView().setText(deviceInfor.getWifiName());
		itvWifiPwd.getSecondView().setText(deviceInfor.getWifiPwd());
		itvIp.getSecondView().setText(deviceInfor.getIp());
		itvStorage.getSecondView().setText(deviceInfor.getNetInfo());
		
		/*itvName.showIocn();
		itvAddr.showIocn();
		itvOritation.showIocn();
		itvLastOnline.showIocn();
		itvEndTime.showIocn();
		itvVersion.showIocn();
		itvWifiName.showIocn();
		itvWifiPwd.showIocn();
		itvIp.showIocn();
		itvStorage.showIocn();*/
		
		itvName.setOnClick(this);
		itvAddr.setOnClick(this);
		itvOritation.setOnClick(this);
	}

	private String getVideoWhirl(String videoWhirl)
	{
		if(videoWhirl.equals("0"))
		{
			return getResources().getString(R.string.video_oritation_1);
		}
		else if(videoWhirl.equals("1"))
		{
			return getResources().getString(R.string.video_oritation_2);
		}
		else if(videoWhirl.equals("2"))
		{
			return getResources().getString(R.string.video_oritation_3);
		}
		else if(videoWhirl.equals("3"))
		{
			return getResources().getString(R.string.video_oritation_4);
		}
		return getResources().getString(R.string.screen_oritiontion)+videoWhirl;
	}
	
	private void showVideoWhirlDialog(final DeviceInfor devInfor)
	{
		final VideoDirectionDialog videoDirectionDialog = new VideoDirectionDialog(getActivity());
	
		//playDialog.updateProgress("00:02:18 / 00:05:12");
		if(videoDirectionDialog.isShowing())
			videoDirectionDialog.dismiss();
		videoDirectionDialog.showDialog(deviceInfor.getVideoWhirl(), deviceInfor.getCode());
		videoDirectionDialog.setOnDismissListener(new OnDismissListener()
		{
			@Override
			public void onDismiss(DialogInterface arg0) 
			{
				// TODO Auto-generated method stub
				if(!TextUtils.isEmpty(videoDirectionDialog.getCurDerection()))
				{
					deviceInfor.setVideoWhirl(videoDirectionDialog.getCurDerection());
					viewVideoWhirl.setText(getResources().getString(R.string.screen_oritiontion) + "(" + getVideoWhirl(deviceInfor.getVideoWhirl()) + ")");
				}
				//
			}
		});
		WindowManager windowManager = ((Activity) getActivity()).getWindowManager();
		Display display = windowManager.getDefaultDisplay();
		WindowManager.LayoutParams lp = videoDirectionDialog.getWindow().getAttributes();
		lp.width = (int)(display.getWidth()); //è®¾ç½®å®½åº¦
		lp.height = (int)(display.getHeight()); //è®¾ç½®é«˜åº¦
		videoDirectionDialog.getWindow().setAttributes(lp);
	}
	
	private EditNameDialog dialog = null;
	private void showEditNameDialog()
	{
		if(dialog == null || dialog.isDismissed())
			dialog = new EditNameDialog(getActivity(), "ÇëÊäÈëµêÆÌÃû³Æ");
		//playDialog.updateProgress("00:02:18 / 00:05:12");
		if(dialog.isShowing())
			dialog.dismiss();
		dialog.show();
		final String oldName = tvShopName.getText().toString();
		dialog.setInfor(oldName);
		dialog.setOnClickListener(new OnClickListener() 
		{
			@Override
			public void onClick(View arg0)
			{
				// TODO Auto-generated method stub
				if(TextUtils.isEmpty(dialog.getContent()))
				{
					showToast(getResources().getString(R.string.please_input_content));
					return;
				}
				if(dialog.getContent().equals(oldName))
				{
					showToast(getResources().getString(R.string.name_not_change));
					return;
				}
				shopNewName = dialog.getContent();
				httpFactory.updateSpeakerName(dialog.getContent(), deviceInfor.getCode());
				dialog.dismiss();
			}
		});
		
		WindowManager windowManager = getActivity().getWindowManager();
		Display display = windowManager.getDefaultDisplay();
		WindowManager.LayoutParams lp = dialog.getWindow().getAttributes();
		lp.width = (int)(display.getWidth()); //è®¾ç½®å®½åº¦
		lp.height = (int)(display.getHeight()); //è®¾ç½®é«˜åº¦
		dialog.getWindow().setAttributes(lp);
	}
	
	@Override
	public void onClick(View v) 
	{
		// TODO Auto-generated method stub
		if(v == itvName.getBgView())
		{
			
		}
		else if(v == itvAddr.getBgView())
		{
			
		}
		else if(v == itvOritation.getBgView())
		{
			showVideoWhirlDialog(deviceInfor);
		}
	}
	
}
